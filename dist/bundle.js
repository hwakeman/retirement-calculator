(()=>{"use strict";var n={336:(n,e,t)=>{t.d(e,{c:()=>p});var r=t(648),a=t.n(r),o=t(312),i=t.n(o),c=t(536),l=t.n(c),s=new URL(t(96),t.b),d=i()(a()),A=l()(s);d.push([n.id,`@font-face {\n    font-family: 'Inter';\n    src: url(${A});\n}\n\n:root {\n    --header-height: 50px\n}\n\nbody {\n    margin: 0;\n}\n\n.content {\n    animation: appear .25s linear 0s;\n}\n\nheader {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    height: var(--header-height);\n    padding-left: 10px;\n\n    background-color: rgb(229, 228, 228);\n    border-bottom: grey 1px solid;\n    font-family: 'Inter', sans-serif;\n    font-size: 1.5rem;\n}\n\nmain {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    font-family: 'Inter', sans-serif;\n    font-size: 1.2rem;\n}\n\n.retirement-form {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    margin-top: 20px;\n}\n\n.retirement-form label,\n.separater,\n.add-btn {\n    margin-bottom: 15px;\n}\n\n.retirement-form input,\n.retirement-form select {\n    padding: 4px;\n    margin-left: 5px;\n    border-radius: 5px;\n}\n\n.retirement-form input:focus {\n    border: 3px solid black;\n    outline: none;\n}\n\n.section {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    width: 100%;\n}\n\n.section-label {\n    align-self: center;\n    margin-top: 0;\n}\n\n.items-list {\n    display: flex;\n    flex-direction: column;\n}\n\n.item {\n    display: flex;\n    flex-direction: column;\n    padding: 5px;\n    margin-bottom: 20px;\n    background-color: gray;\n    border: 1px solid black;\n}\n\n.add-btn {\n    background-color: gray;\n    color: white;\n    align-self: flex-start;\n}\n\n.submit-btn {\n    background-color: orange;\n}\n\n.add-btn,\n.submit-btn {\n    border: none;\n    padding: 5px 10px;\n    border-radius: 5px;\n    transition: scale .2s ease-in-out;\n}\n\n.add-btn:hover,\n.submit-btn:hover {\n    transition: scale .2s ease-in-out;\n    scale: 1.1;\n}\n\n.separater {\n    width: 100%;\n    height: 2px;\n    background-color: grey;\n}\n\n@keyframes appear {\n    from {\n        opacity: 0;\n    }\n\n    to {\n        opacity: 1;\n    }\n}`,"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,4CAA0C;AAC9C;;AAEA;IACI;AACJ;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,gCAAgC;AACpC;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,mBAAmB;;IAEnB,4BAA4B;IAC5B,kBAAkB;;IAElB,oCAAoC;IACpC,6BAA6B;IAC7B,gCAAgC;IAChC,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;IAEnB,gCAAgC;IAChC,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,gBAAgB;AACpB;;AAEA;;;IAGI,mBAAmB;AACvB;;AAEA;;IAEI,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;;IAEnB,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,mBAAmB;IACnB,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;;IAEI,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,iCAAiC;AACrC;;AAEA;;IAEI,iCAAiC;IACjC,UAAU;AACd;;AAEA;IACI,WAAW;IACX,WAAW;IACX,sBAAsB;AAC1B;;AAEA;IACI;QACI,UAAU;IACd;;IAEA;QACI,UAAU;IACd;AACJ",sourcesContent:["@font-face {\n    font-family: 'Inter';\n    src: url(./assets/fonts/Inter-Regular.ttf);\n}\n\n:root {\n    --header-height: 50px\n}\n\nbody {\n    margin: 0;\n}\n\n.content {\n    animation: appear .25s linear 0s;\n}\n\nheader {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    height: var(--header-height);\n    padding-left: 10px;\n\n    background-color: rgb(229, 228, 228);\n    border-bottom: grey 1px solid;\n    font-family: 'Inter', sans-serif;\n    font-size: 1.5rem;\n}\n\nmain {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    font-family: 'Inter', sans-serif;\n    font-size: 1.2rem;\n}\n\n.retirement-form {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    margin-top: 20px;\n}\n\n.retirement-form label,\n.separater,\n.add-btn {\n    margin-bottom: 15px;\n}\n\n.retirement-form input,\n.retirement-form select {\n    padding: 4px;\n    margin-left: 5px;\n    border-radius: 5px;\n}\n\n.retirement-form input:focus {\n    border: 3px solid black;\n    outline: none;\n}\n\n.section {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    width: 100%;\n}\n\n.section-label {\n    align-self: center;\n    margin-top: 0;\n}\n\n.items-list {\n    display: flex;\n    flex-direction: column;\n}\n\n.item {\n    display: flex;\n    flex-direction: column;\n    padding: 5px;\n    margin-bottom: 20px;\n    background-color: gray;\n    border: 1px solid black;\n}\n\n.add-btn {\n    background-color: gray;\n    color: white;\n    align-self: flex-start;\n}\n\n.submit-btn {\n    background-color: orange;\n}\n\n.add-btn,\n.submit-btn {\n    border: none;\n    padding: 5px 10px;\n    border-radius: 5px;\n    transition: scale .2s ease-in-out;\n}\n\n.add-btn:hover,\n.submit-btn:hover {\n    transition: scale .2s ease-in-out;\n    scale: 1.1;\n}\n\n.separater {\n    width: 100%;\n    height: 2px;\n    background-color: grey;\n}\n\n@keyframes appear {\n    from {\n        opacity: 0;\n    }\n\n    to {\n        opacity: 1;\n    }\n}"],sourceRoot:""}]);const p=d},312:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&i[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},536:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},648:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},596:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],c=0;c<n.length;c++){var l=n[c],s=r.base?l[0]+r.base:l[0],d=o[s]||0,A="".concat(s," ").concat(d);o[s]=d+1;var p=t(A),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,r);r.byIndex=c,e.splice(c,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=t(o[i]);e[c].references--}for(var l=r(n,a),s=0;s<o.length;s++){var d=t(o[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}o=l}}},176:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},808:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},120:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},520:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},936:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},96:(n,e,t)=>{n.exports=t.p+"9ca9ba81e9dcaa12b3a1.ttf"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&!n;)n=r[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(596),e=t.n(n),r=t(520),a=t.n(r),o=t(176),i=t.n(o),c=t(120),l=t.n(c),s=t(808),d=t.n(s),A=t(936),p=t.n(A),u=t(336),m={};function f(n){var e=document.createElement("div");e.classList.add("section"),e.classList.add("".concat(n,"-section"));var t=n.charAt(0).toUpperCase()+n.slice(1);e.appendChild(function(n){var e=document.createElement("h3");return e.classList.add("section-label"),e.textContent=n,e}(t));var r=document.createElement("div");return r.classList.add("items-list"),r.classList.add("".concat(n,"-items")),e.appendChild(r),e.appendChild(function(n){var e=document.createElement("button");return e.classList.add("add-btn"),e.textContent="+","income"===n?e.onclick=function(e){e.preventDefault(),document.getElementsByClassName("".concat(n,"-items"))[0].appendChild(function(){var n=document.createElement("div");n.classList.add("item"),n.classList.add("income-item");var e=document.createElement("label");e.textContent="Salary: ";var t=document.createElement("input");t.type="number",e.appendChild(t);var r=document.createElement("label");r.textContent="Salary Yearly Increase: ";var a=document.createElement("input");a.type="number",r.appendChild(a);var o=document.createElement("label");o.textContent="End date: ";var i=document.createElement("input");i.type="date";var c=(new Date).toISOString().split("T")[0];return i.min=c,o.appendChild(i),n.appendChild(e),n.appendChild(r),n.appendChild(o),n}())}:"debts"===n&&(e.onclick=function(e){e.preventDefault(),document.getElementsByClassName("".concat(n,"-items"))[0].appendChild(function(){var n=document.createElement("div");n.classList.add("item"),n.classList.add("income-item");var e=document.createElement("label");e.textContent="Balance: ";var t=document.createElement("input");t.type="number",e.appendChild(t);var r=document.createElement("label");r.textContent="Interest Rate: ";var a=document.createElement("input");a.type="number",r.appendChild(a);var o=document.createElement("label");o.textContent="Monthly Payment: ";var i=document.createElement("input");return i.type="number",o.appendChild(i),n.appendChild(e),n.appendChild(r),n.appendChild(o),n}())}),e}(n)),e}function C(){var n=document.createElement("div");return n.classList.add("separater"),n}m.styleTagTransform=p(),m.setAttributes=l(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),e()(u.c,m),u.c&&u.c.locals&&u.c.locals;var b,h=document.createElement("div");h.appendChild(((b=document.createElement("header")).textContent="Retirement Calculator",b)),h.appendChild(function(){var n=document.createElement("main"),e=document.createElement("p");return e.classList.add("description"),e.textContent="Ever wondered when you will be able to retire with your current financial plan? Use this retirement calculator to find out!",n.appendChild(e),n.appendChild(function(){var n=document.createElement("form");n.classList.add("retirement-form");var e=document.createElement("label");e.textContent="Age:";var t=document.createElement("input");t.type="number",t.max=130,e.appendChild(t),n.appendChild(e);var r=document.createElement("label");r.textContent="Expected Inflation Rate:";var a=document.createElement("input");a.type="number",a.max=130,r.appendChild(a),n.appendChild(r);var o=document.createElement("label");o.textContent="Retirement Lifestyle:";for(var i=document.createElement("select"),c=["Barebones","Frugal","Moderate","Comfortable","Luxurious"],l=0;l<c.length;l+=1){var s=document.createElement("option");s.value=c[l],s.textContent=c[l],i.appendChild(s)}o.appendChild(i),n.appendChild(o),n.appendChild(C()),n.appendChild(f("income")),n.appendChild(C()),n.appendChild(f("debts")),n.appendChild(C());var d=document.createElement("button");return d.classList.add("submit-btn"),d.textContent="Calculate",n.appendChild(d),n}()),n}()),h.classList.add("content"),document.body.appendChild(h)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,